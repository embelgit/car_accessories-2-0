package com.smt.dao;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import net.sf.hibernate.odmg.Transaction;

import org.hibernate.Query;
import org.hibernate.Session;

import com.smt.bean.ProductDetailBean;
import com.smt.bean.UpdateProductDetails;
import com.smt.hibernate.Category;
import com.smt.hibernate.ProductDetail;
import com.smt.hibernate.SupplierDetail;
import com.smt.utility.HibernateUtility;

public class ProductDetailDao {

	public void valProductDetail(ProductDetail productDetail){
		
		HibernateUtility hbu=HibernateUtility.getInstance();
		Session session=hbu.getHibernateSession();
		org.hibernate.Transaction transaction=session.beginTransaction();
		Long fkSupplierId = productDetail.getFkSupplierId();
		SupplierDetail supplierDetail = (SupplierDetail) session.get(SupplierDetail.class, new Long(fkSupplierId));
       // String supplierName = supplierDetail.getSupplierName();
        //System.out.println(supplierName);
		productDetail.setSupplierDetail(supplierDetail);
		Long fkCategoryId = productDetail.getFkCategoryId();
		Category category = (Category) session.get(Category.class, new Long(fkCategoryId));
       productDetail.setCategory(category);
		productDetail.setIsActiveYn("Y");
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		Date dateobj = new Date();
		System.out.println(df.format(dateobj));
		productDetail.setIsInsertDate(dateobj);
		productDetail.setIsModifiedDate(dateobj);
		long p=(long) session.save(productDetail);
		transaction.commit();
		hbu.closeSession(session);
		
		
	}
	
	public List getAllProductNames(){
		
		HibernateUtility hbu = HibernateUtility.getInstance();
		Session session = hbu.getHibernateSession();
		Query query = session.createQuery("from ProductDetail");
		List list = query.list();
		//System.out.println("Product Details" + list);
		return list;
	}
	
   public List getAllProductDetails()
   {
	   HibernateUtility hbu = HibernateUtility.getInstance();
		Session session = hbu.getHibernateSession();
		Query query = session.createSQLQuery("select s.shop_name , sup.supplier_name , c.category_name ,sc.subcat_name ,p.pk_product_id, p.item_name , p.is_vat , p.vat_percentage , p.is_alternate_product , p.is_item , p.commision from product_details p left join shop_detail s ON p.fk_shop_id=s.shop_id left join supplier_details sup ON p.fk_vendor_id = sup.supplier_id left join categories c ON p.fk_cat_id = c.pk_category_id left join sub_categories sc ON sc.fk_rootcat_id = c.pk_category_id");
	    List<Object[]> list = query.list();
	    List<UpdateProductDetails> proList = new ArrayList<UpdateProductDetails>(0);
	    for (Object[] objects : list) {
			 
	     UpdateProductDetails productDetails  = new UpdateProductDetails();
	     productDetails.setShopName(objects[0].toString());
	     productDetails.setSupplierName(objects[1].toString());
	     productDetails.setCategoryName(objects[2].toString());
	     productDetails.setSubCatName(objects[3].toString());
	     productDetails.setProductId(Long.parseLong(objects[4].toString()));
	     productDetails.setProductName(objects[5].toString());
	     productDetails.setIsVat(objects[6].toString());
	     productDetails.setVatPercentage(Double.parseDouble(objects[7].toString()));
	     productDetails.setIsAlterNate(objects[8].toString());
	     productDetails.setIsItem(objects[9].toString());
	     productDetails.setCommission(Double.parseDouble(objects[10].toString()));
	     
	     proList.add(productDetails);
	    	System.out.println(Arrays.toString(objects));
		}
	    return proList;
   }
	
   public List getLeafcatBYCatandSubCategory(String catID,String subCatID)
	{
		HibernateUtility hbu = HibernateUtility.getInstance();
		Session session = hbu.getHibernateSession();
		Query query = session.createQuery("select i.leafcatName from ItemDetail as i join i.productDetail where i.productDetail.category.subCategory.pkSubcatId="+subCatID);
		List list = query.list();																																		
		System.out.println(list.size());
	
		//System.out.println("Item List iiiii"+list);
		return list;
		
	}
   
}
